{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix } from '../primitives/matrix';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription) {\n        annotation.id = annotation.id || randomId();\n        var textele = new TextElement();\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.content = annotation.content;\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        textele.style.textOverflow = 'Wrap';\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        textElement.refreshTextElement();\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return nodes[i];\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds, randomId } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        this.isRectElement = false;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        this.float = false;\n        this.floatingBounds = undefined;\n        this.id = randomId();\n    }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        //Private variables\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        get: function () {\n            return this.pathData;\n        },\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the native element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'white', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        get: function () {\n            return this.textContent;\n        },\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        get: function () {\n            return this.textNodes;\n        },\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        get: function () {\n            return this.textWrapBounds;\n        },\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        get: function () {\n            return this.imageSource;\n        },\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    if (child.rotateAngle !== 0) {\n                        childSize = rotateSize(childSize, child.rotateAngle);\n                    }\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY, childSize);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                child.arrange(child.desiredSize);\n                this.outerBounds.uniteRect(child.outerBounds);\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y, childSize) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= childSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= childSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= childSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= childSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        _this.nodeId = '';\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        if (_this.children && _this.children.length > 0) {\n            var nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content = new DiagramElement();\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if (this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = this.children ? new Container() : new Canvas();\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent = new TextElement();\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        var style = annotation.style;\n        var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n        annotationcontent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n            bold: style.bold, textWrapping: style.textWrapping,\n            color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n            fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n            textDecoration: link ? link.textDecoration || annotationcontent.hyperlink.textDecoration : style.textDecoration,\n        };\n        annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n        annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n        annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n        annotationcontent.content = link ? link.content || annotationcontent.hyperlink.link : annotation.content;\n        if (this.width !== undefined) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.offset = 0;\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj) {\n        ctx.rotate(obj.angle * Math.PI / 180);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n        ctx.rotate(-(obj.angle * Math.PI / 180));\n    };\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX = obj.x + obj.width * obj.pivotX;\n            var pivotY = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + element.parentTransform + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) {\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                canvas.appendChild(gElement);\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (nodeWidth >= 40 && nodeHeight >= 40) {\n            //Hide corners when the size is less than 40\n            if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n            }\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeWest) {\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeEast) {\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n        }\n    };\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            defs.appendChild(pattern);\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = 'transparent';\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, diff.x, diff.y, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && canOutConnect(args.target))\n                    || (this.endPoint === 'ConnectorTargetEnd' && canInConnect(args.target)))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    this.commandHandler.connect(this.endPoint, args);\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            if (obj.offsetX !== this.undoElement.offsetX || obj.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', changeObjectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            if (args.source instanceof Node) {\n                if (args.source.offsetX === this.undoElement.nodes[0].offsetX &&\n                    args.source.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(args.source.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(args.source.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (args.source.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                args.source.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (args.source) {\n            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n        }\n        var arg = {\n            source: args.source, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (args.source) {\n                oldValues_1 = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                newValues = {\n                    offsetX: args.source.wrapper.offsetX + snappedPoint.x,\n                    offsetY: args.source.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: args.source, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drawHighlighter(this.currentTarget);\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    RotateTool.prototype.mouseUp = function (args) {\n        if (this.undoElement.rotateAngle !== args.source.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.rotateAngle === args.source.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: this.currentElement.wrapper.offsetX, y: this.currentElement.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - this.currentElement.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        if (this.undoElement.offsetX !== args.source.wrapper.offsetX || this.undoElement.offsetY !== args.source.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, args.source);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.offsetX === args.source.wrapper.offsetX && this.undoElement.offsetY === args.source.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, args.source));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            changeObjectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            this.eventArgs.sourceWrapper instanceof TextElement) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target)) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        //end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === \"nudgeRight\" || i === \"nudgeDown\" || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element) {\n                                    if (obj instanceof Connector && diagram.bpmnModule) {\n                                        //    obj = diagram.bpmnModule.findInteractableObject(obj, diagram);\n                                    }\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canOutConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canInConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (actualTarget.parentId) {\n                    var obj = actualTarget;\n                    var selected = isSelected(diagram, obj);\n                    while (obj) {\n                        if (isSelected(diagram, obj) && !selected) {\n                            break;\n                        }\n                        actualTarget = obj;\n                        obj = diagram.nameTable[obj.parentId];\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        this.clipboardData = {};\n        this.connectorsTable = [];\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) {\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection && element instanceof TextElement) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        children = children.concat(obj.children);\n        if (this.clipboardData.childTable) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = this.clipboardData.childTable[children[i]];\n                if (childObj) {\n                    var newObj = void 0;\n                    if (getObjectType(childObj) === Connector) {\n                        newObj = this.cloneConnector(childObj, multiSelect);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect);\n                    }\n                    newChildren.push(newObj.id);\n                }\n            }\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj) {\n        obj.id += randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n            }\n        }\n    };\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                }\n                this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, pivot, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n            }\n            else {\n                this.scaleObject(sw, sh, pivot, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent) {\n        var temp = node;\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return nodes;\n    };\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n            var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n            pivot = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        width: node.width, height: node.height, offsetX: node.offsetX,\n                        offsetY: node.offsetY, margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                    });\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            intersectingOffset = intersetingPts[intersetingPts.length - 1];\n            newOffset = intersectingOffset;\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size);\n        }\n    };\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (target.isExpanded) {\n                this.expandCollapse(target, visibility, diagram);\n            }\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            target.visible = visibility;\n            target.style.opacity = (this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            diagram.nodePropertyChange(target, oldValues, newValues);\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.preventScale = false;\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        this.initCommands();\n        this.isLoading = false;\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        this.drag(obj, tx, ty);\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            this.triggerEvent(DiagramEvent.collectionChange, args);\n            var activeLayer = void 0;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    //  newObj.processId = (obj as Node).processId;\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0) {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                parentNode.children.push(id);\n                parentNode.wrapper.children.push(this.nameTable[id].wrapper);\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    bounds.width = Math.max(bounds.width, 50);\n                    x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                    y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof TextElement) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n    };\n    Diagram.prototype.initData = function () {\n        if (this.dataBindingModule) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    var getDefaults = getFunction(this.getNodeDefaults);\n                    if (getDefaults) {\n                        var defaults = getDefaults(obj, this);\n                        if (defaults && defaults !== obj) {\n                            extendObject(defaults, obj);\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            if (independentObj) {\n                var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n                if (!checkBoundaryConstraints) {\n                    var node = obj instanceof Node ? this.nodes : this.connectors;\n                    for (var i = 0; i <= node.length; i++) {\n                        if (node[i] && obj.id === node[i].id) {\n                            node.splice(i, 1);\n                        }\n                    }\n                }\n                layer.zIndexTable[obj.zIndex] = obj.id;\n            }\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.scale(obj, sw, sh, { x: 0, y: 1 });\n        this.drag(obj, groupOffsetX - obj.offsetX, groupOffsetY - obj.offsetY);\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!this.preventScale) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.preventScale = true;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.preventScale = false;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.preventScale = true;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.preventScale = false;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            for (var i = 0; i < obj.children.length; i++) {\n                if (this.nameTable[obj.children[i]]) {\n                    canvas.children.push(this.nameTable[obj.children[i]].wrapper);\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            canvas.children.push(portContainer);\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        canvas.arrange(canvas.desiredSize);\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var htmlLayer = getHTMLLayer(this.element.id);\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers();\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.views[temp];\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if (!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var container = document.getElementById(view.element.id);\n        var bounds = container.getBoundingClientRect();\n        var node;\n        var element;\n        var connector;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            element = this.basicElements[i];\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n        }\n        this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport) {\n        if (transform === void 0) { transform = true; }\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            for (var _b = 0, _c = Object.keys(layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var element = this.nameTable[layer.zIndexTable[node]].wrapper;\n                if (!(this.nameTable[layer.zIndexTable[node]].parentId)\n                    && !(this.nameTable[layer.zIndexTable[node]].processId)) {\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    renderer.renderElement(element, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? this.scroller.transform : undefined, undefined, undefined, status_1);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width;\n        height = view.contentHeight || view.diagramLayer.height;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            diagramLayer.setAttribute('width', (factor * width).toString());\n            diagramLayer.setAttribute('height', (factor * height).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]));\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]));\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_1 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_1.children) {\n                        for (var _i = 0, _a = parent_1.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.width, true);\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.height, false);\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (this.mode === 'SVG' && !this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, newProp, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || canOutConnect(sourceNode)) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                if (!targetNode || canInConnect(targetNode)) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        }\n        //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction))) {\n            this.updateSelector();\n        }\n        if (this.mode === 'SVG' && !this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            if (changedObject.content !== undefined) {\n                if (annotationWrapper) {\n                    isMeasure = true;\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            annotationWrapper.refreshTextElement();\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            newObj.id += randomId();\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                _this['enterObject'] = newObj;\n                                _this['enterTable'] = entryTable;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                delete _this['enterObject'];\n                                delete _this['enterTable'];\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    _this.add(clonedObject, true);\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width;\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height;\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = this.intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.intersect2 = function (start1, end1, start2, end2) {\n        var point = { x: 0, y: 0 };\n        var lineUtil1 = this.getLineSegment(start1.x, start1.y, end1.x, end1.y);\n        var lineUtil2 = this.getLineSegment(start2.x, start2.y, end2.x, end2.y);\n        var line3 = intersect3(lineUtil1, lineUtil2);\n        if (line3.enabled) {\n            return line3.intersectPt;\n        }\n        else {\n            return point;\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.getLineSegment = function (x1, y1, x2, y2) {\n        return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = (shape instanceof TextElement) ? getBounds(shape) : getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) {\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.nestedBestRanks[j][cell.temp[0]] = cell;\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType } from '../diagram/utility/diagram-util';\nimport { getFunction } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.symbolTable = {};\n        _this.childTable = {};\n        _this.info = 'info';\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","bottomLeft","middleLeft","topRight","bottomCenter","middleRight","bottomRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","isTarget","reverse","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canOutConnect","OutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","PortConstraints","Draw","canDrag","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","completeRegion","region","selectedObjects","containsRect","findObjectType","drawingObject","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","k","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","nameTable","isPointOverConnector","intermediatePoints","rect","Rect","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","annotations","container","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","index","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","cloneObject","getCustomProperty","selectedItems","nodes","connectors","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","_a","commandManager","name","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","Object","keys","fill","StrokeStyle","textOverflow","opacity","strokeColor","strokeDashArray","strokeWidth","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","actualObject","minHeight","maxHeight","minWidth","maxWidth","horizontalAlignment","verticalAlignment","visible","Text","elementId","updateShape","oldObject","DiagramElement","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","basicShapeData","removeItem","array","item","indexOf","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","action","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","measure","arrange","desiredSize","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","text","textValue","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getAdornerLayerSvg","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","getNativeLayer","getHTMLLayer","elementType","attribute","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","parent","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","attributes","createMeasureElements","usageCount","divElement","createTextNode","tSpan","randomId","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","currentSymbol","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkForResizeHandles","PointPort","findPortToolToActivate","isSelected","conn","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","padding","firstLevel","parentId","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","DiagramEvent","isDirt","Self","Parent","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","textNodes","textWrapBounds","imageSource","stretch","Canvas","leftMargin","topMargin","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","bridges","bpmnElement","getSegmentElement","getConnectorPoints","flow","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","pathseqData","pathseq","findPath","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","Default","CollectionFactory","UserHandle","getWrapper","All","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","processId","outEdges","inEdges","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderColor","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","initAnnotationWrapper","portContent","pathdata","label","annotationcontent","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getObjectType","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","entry","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","grid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","commandHandler","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","updateSize","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","clearSelection","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","redoObject","undoObject","category","addHistoryEntry","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","dropAnnotation","endGroupAction","changeObjectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","findObjectsUnderMouse","findObjectUnderMouse","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","setInterval","doAutoScroll","detail","which","isMultipleSelect","renderSelector","click","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","actions","actualTarget","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","zIndex","_d","_e","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","updateDiagramObject","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","getAnnotation","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","UndoRedo","removePorts","removeLabels","deleteChild","addChild","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","newObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","childObj","prop","initObject","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","select","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","objectId","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","diagramRenderer","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","drag","nodePropertyChange","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","parent_1","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","nodes_1","scaleObject","updateGroupOffset","isResize","refWrapper","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","updateLabelMargin","tempPt","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","line3","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","undoObj","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","DiagramScroller","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","preventScale","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","localeObj","L10n","locale","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","requiredModules","modules","member","show","dataManager","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Clear","deleteGroup","removeBpmnProcesses","updateNodeEdges","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","dataSource","url","initSource","independentObj","currentLayer","defaultLayer","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","groupOffsetX","groupOffsetY","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","portContainer","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","fromExport","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","adornerSvg","highlighter","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","isLayout","existingBounds","updateMargin","updateBPMN","actualPort","updatePort","checkSelectedItem","updateTextAnnotationProp","updateConnectorEdges","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","annotationWrapper","updateAnnotations","updateNodeProperty","selItems","canUpdateSize","isMeasure","portWrapper","String","iconRect","iconShape","enable","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","findChild","addChildNodes","out","dragLeave","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","then","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","self","zOrder","inter1","intersect2","checkForHorizontalLine","roundedAngle","start1","end1","start2","end2","getLineSegment","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","line1","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","addObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","rows","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","columns","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","cell","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","header","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","initSymbols","symbolGroup","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","addPaletteItem","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","stackPanel","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","symbolWidth","symbolHeight","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}